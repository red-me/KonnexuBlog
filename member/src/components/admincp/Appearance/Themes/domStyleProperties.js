const styles = [
    { name: "alignContent", description: "The alignment between the lines inside a flexible container when the items do not use all available space" },
    { name: "alignItems", description: "The alignment for items inside a flexible container" },
    { name: "alignSelf", description: "The alignment for selected items inside a flexible container" },
    { name: "animation", description: "A shorthand property for all the animation properties below, except the animationPlayState property" },
    { name: "animationDelay", description: "When the animation will start" },
    { name: "animationDirection", description: "Whether or not the animation should play in reverse on alternate cycles" },
    { name: "animationDuration", description: "How many seconds or milliseconds an animation takes to complete one cycle" },
    { name: "animationFillMode", description: "What values are applied by the animation outside the time it is executing" },
    { name: "animationIterationCount", description: "The number of times an animation should be played" },
    { name: "animationName", description: "A name for the @keyframes animation" },
    { name: "animationTimingFunction", description: "The speed curve of the animation" },
    { name: "animationPlayState", description: "Whether the animation is running or paused" },
    { name: "background", description: "All the background properties in one declaration" },
    { name: "backgroundAttachment", description: "Whether a background-image is fixed or scrolls with the page" },
    { name: "backgroundColor", description: "The background-color of an element" },
    { name: "backgroundImage", description: "The background-image for an element" },
    { name: "backgroundPosition", description: "The starting position of a background-image" },
    { name: "backgroundRepeat", description: "How to repeat (tile) a background-image" },
    { name: "backgroundClip", description: "The painting area of the background" },
    { name: "backgroundOrigin", description: "The positioning area of the background images" },
    { name: "backgroundSize", description: "The size of the background image" },
    { name: "backfaceVisibility", description: "Whether or not an element should be visible when not facing the screen" },
    { name: "border", description: "BorderWidth, borderStyle, and borderColor in one declaration" },
    { name: "borderBottom", description: "All the borderBottom properties in one declaration" },
    { name: "borderBottomColor", description: "The color of the bottom border" },
    { name: "borderBottomLeftRadius", description: "The shape of the border of the bottom-left corner" },
    { name: "borderBottomRightRadius", description: "The shape of the border of the bottom-right corner" },
    { name: "borderBottomStyle", description: "The style of the bottom border" },
    { name: "borderBottomWidth", description: "The width of the bottom border" },
    { name: "borderCollapse", description: "Whether the table border should be collapsed into a single border, or not" },
    { name: "borderColor", description: "The color of an element's border (can have up to four values)" },
    { name: "borderImage", description: "A shorthand property for setting or returning all the borderImage properties" },
    { name: "borderImageOutset", description: "The amount by which the border image area extends beyond the border box" },
    { name: "borderImageRepeat", description: "Whether the image-border should be repeated, rounded or stretched" },
    { name: "borderImageSlice", description: "The inward offsets of the image-border" },
    { name: "borderImageSource", description: "The image to be used as a border" },
    { name: "borderImageWidth", description: "The widths of the image-border" },
    { name: "borderLeft", description: "All the borderLeft properties in one declaration" },
    { name: "borderLeftColor", description: "The color of the left border" },
    { name: "borderLeftStyle", description: "The style of the left border" },
    { name: "borderLeftWidth", description: "The width of the left border" },
    { name: "borderRadius", description: "A shorthand property for setting or returning all the four borderRadius properties" },
    { name: "borderRight", description: "All the borderRight properties in one declaration" },
    { name: "borderRightColor", description: "The color of the right border" },
    { name: "borderRightStyle", description: "The style of the right border" },
    { name: "borderRightWidth", description: "The width of the right border" },
    { name: "borderSpacing", description: "The space between cells in a table" },
    { name: "borderStyle", description: "The style of an element's border (can have up to four values)" },
    { name: "borderTop", description: "All the borderTop properties in one declaration" },
    { name: "borderTopColor", description: "The color of the top border" },
    { name: "borderTopLeftRadius", description: "The shape of the border of the top-left corner" },
    { name: "borderTopRightRadius", description: "The shape of the border of the top-right corner" },
    { name: "borderTopStyle", description: "The style of the top border" },
    { name: "borderTopWidth", description: "The width of the top border" },
    { name: "borderWidth", description: "The width of an element's border (can have up to four values)" },
    { name: "bottom", description: "The bottom position of a positioned element" },
    { name: "boxDecorationBreak", description: "The behaviour of the background and border of an element at page-break, or, for in-line elements, at line-break." },
    { name: "boxShadow", description: "Attaches one or more drop-shadows to the box" },
    { name: "boxSizing", description: "Allows you to define certain elements to fit an area in a certain way" },
    { name: "captionSide", description: "The position of the table caption" },
    { name: "caretColor", description: "The caret/cursor color of an element" },
    { name: "clear", description: "The position of the element relative to floating objects" },
    { name: "clip", description: "Which part of a positioned element is visible" },
    { name: "color", description: "The color of the text" },
    { name: "columnCount", description: "The number of columns an element should be divided into" },
    { name: "columnFill", description: "How to fill columns" },
    { name: "columnGap", description: "The gap between the columns" },
    { name: "columnRule", description: "A shorthand property for setting or returning all the columnRule properties" },
    { name: "columnRuleColor", description: "The color of the rule between columns" },
    { name: "columnRuleStyle", description: "The style of the rule between columns" },
    { name: "columnRuleWidth", description: "The width of the rule between columns" },
    { name: "columns", description: "A shorthand property for setting or returning columnWidth and columnCount" },
    { name: "columnSpan", description: "How many columns an element should span across" },
    { name: "columnWidth", description: "The width of the columns" },
    { name: "content", description: "Used with the :before and :after pseudo-elements, to insert generated content" },
    { name: "counterIncrement", description: "Increments one or more counters" },
    { name: "counterReset", description: "Creates or resets one or more counters" },
    { name: "cursor", description: "The type of cursor to display for the mouse pointer" },
    { name: "direction", description: "The text direction" },
    { name: "display", description: "An element's display type" },
    { name: "emptyCells", description: "Whether to show the border and background of empty cells, or not" },
    { name: "filter", description: "Image filters (visual effects, like blur and saturation)" },
    { name: "flex", description: "The length of the item, relative to the rest" },
    { name: "flexBasis", description: "The initial length of a flexible item" },
    { name: "flexDirection", description: "The direction of the flexible items" },
    { name: "flexFlow", description: "A shorthand property for the flexDirection and the flexWrap properties" },
    { name: "flexGrow", description: "How much the item will grow relative to the rest" },
    { name: "flexShrink", description: "How the item will shrink relative to the rest" },
    { name: "flexWrap", description: "Whether the flexible items should wrap or not" },
    { name: "cssFloat", description: "The horizontal alignment of an element" },
    { name: "font", description: "FontStyle, fontVariant, fontWeight, fontSize, lineHeight, and fontFamily in one declaration" },
    { name: "fontFamily", description: "The font family for text" },
    { name: "fontSize", description: "The font size of the text" },
    { name: "fontStyle", description: "Whether the style of the font is normal, italic or oblique" },
    { name: "fontVariant", description: "Whether the font should be displayed in small capital letters" },
    { name: "fontWeight", description: "The boldness of the font" },
    { name: "fontSizeAdjust", description: "Preserves the readability of text when font fallback occurs" },
    { name: "fontStretch", description: "Selects a normal, condensed, or expanded face from a font family" },
    { name: "hangingPunctuation", description: "Specifies whether a punctuation character may be placed outside the line box" },
    { name: "height", description: "The height of an element" },
    { name: "hyphens", description: "How to split words to improve the layout of paragraphs" },
    { name: "icon", description: "Provides the author the ability to style an element with an iconic equivalent" },
    { name: "imageOrientation", description: "Specifies a rotation in the right or clockwise direction that a user agent applies to an image" },
    { name: "isolation", description: "Defines whether an element must create a new stacking content" },
    { name: "justifyContent", description: "The alignment between the items inside a flexible container when the items do not use all available space." },
    { name: "left", description: "The left position of a positioned element" },
    { name: "letterSpacing", description: "The space between characters in a text" },
    { name: "lineHeight", description: "The distance between lines in a text" },
    { name: "listStyle", description: "ListStyleImage, listStylePosition, and listStyleType in one declaration" },
    { name: "listStyleImage", description: "An image as the list-item marker" },
    { name: "listStylePosition", description: "The position of the list-item marker" },
    { name: "listStyleType", description: "The list-item marker type" },
    { name: "margin", description: "The margins of an element (can have up to four values)" },
    { name: "marginBottom", description: "The bottom margin of an element" },
    { name: "marginLeft", description: "The left margin of an element" },
    { name: "marginRight", description: "The right margin of an element" },
    { name: "marginTop", description: "The top margin of an element" },
    { name: "maxHeight", description: "The maximum height of an element" },
    { name: "maxWidth", description: "The maximum width of an element" },
    { name: "minHeight", description: "The minimum height of an element" },
    { name: "minWidth", description: "The minimum width of an element" },
    { name: "navDown", description: "Where to navigate when using the arrow-down navigation key" },
    { name: "navIndex", description: "The tabbing order for an element" },
    { name: "navLeft", description: "Where to navigate when using the arrow-left navigation key" },
    { name: "navRight", description: "Where to navigate when using the arrow-right navigation key" },
    { name: "navUp", description: "Where to navigate when using the arrow-up navigation key" },
    { name: "objectFit", description: "Specifies how the contents of a replaced element should be fitted to the box established by its used height and width" },
    { name: "objectPosition", description: "Specifies the alignment of the replaced element inside its box" },
    { name: "opacity", description: "The opacity level for an element" },
    { name: "order", description: "The order of the flexible item, relative to the rest" },
    { name: "orphans", description: "The minimum number of lines for an element that must be left at the bottom of a page when a page break occurs inside an element" },
    { name: "outline", description: "All the outline properties in one declaration" },
    { name: "outlineColor", description: "The color of the outline around a element" },
    { name: "outlineOffset", description: "Offsets an outline, and draws it beyond the border edge" },
    { name: "outlineStyle", description: "The style of the outline around an element" },
    { name: "outlineWidth", description: "The width of the outline around an element" },
    { name: "overflow", description: "What to do with content that renders outside the element box" },
    { name: "overflowX", description: "Specifies what to do with the left/right edges of the content, if it overflows the element's content area" },
    { name: "overflowY", description: "Specifies what to do with the top/bottom edges of the content, if it overflows the element's content area" },
    { name: "padding", description: "The padding of an element (can have up to four values)" },
    { name: "paddingBottom", description: "The bottom padding of an element" },
    { name: "paddingLeft", description: "The left padding of an element" },
    { name: "paddingRight", description: "The right padding of an element" },
    { name: "paddingTop", description: "The top padding of an element" },
    { name: "pageBreakAfter", description: "The page-break behavior after an element" },
    { name: "pageBreakBefore", description: "The page-break behavior before an element" },
    { name: "pageBreakInside", description: "The page-break behavior inside an element" },
    { name: "perspective", description: "The perspective on how 3D elements are viewed" },
    { name: "perspectiveOrigin", description: "The bottom position of 3D elements" },
    { name: "position", description: "The type of positioning method used for an element (static, relative, absolute or fixed)" },
    { name: "quotes", description: "The type of quotation marks for embedded quotations" },
    { name: "resize", description: "Whether or not an element is resizable by the user" },
    { name: "right", description: "The right position of a positioned element" },
    { name: "scrollBehavior", description: "Specifies whether to smoothly animate the scroll position, instead of a straight jump, when the user clicks on a link within a scrollable boxt" },
    { name: "tableLayout", description: "The way to lay out table cells, rows, and columns" },
    { name: "tabSize", description: "The length of the tab-character" },
    { name: "textAlign", description: "The horizontal alignment of text" },
    { name: "textAlignLast", description: "How the last line of a block or a line right before a forced line break is aligned when text-align is \"justify\"" },
    { name: "textDecoration", description: "The decoration of a text" },
    { name: "textDecorationColor", description: "The color of the text-decoration" },
    { name: "textDecorationLine", description: "The type of line in a text-decoration" },
    { name: "textDecorationStyle", description: "The style of the line in a text decoration" },
    { name: "textIndent", description: "The indentation of the first line of text" },
    { name: "textJustify", description: "The justification method used when text-align is \"justify\"" },
    { name: "textOverflow", description: "What should happen when text overflows the containing element" },
    { name: "textShadow", description: "The shadow effect of a text" },
    { name: "textTransform", description: "The capitalization of a text" },
    { name: "top", description: "The top position of a positioned element" },
    { name: "transform", description: "Applies a 2D or 3D transformation to an element" },
    { name: "transformOrigin", description: "The position of transformed elements" },
    { name: "transformStyle", description: "How nested elements are rendered in 3D space" },
    { name: "transition", description: "A shorthand property for setting or returning the four transition properties" },
    { name: "transitionProperty", description: "The CSS property that the transition effect is for" },
    { name: "transitionDuration", description: "How many seconds or milliseconds a transition effect takes to complete" },
    { name: "transitionTimingFunction", description: "The speed curve of the transition effect" },
    { name: "transitionDelay", description: "When the transition effect will start" },
    { name: "unicodeBidi", description: "Whether the text should be overridden to support multiple languages in the same document" },
    { name: "userSelect", description: "Whether the text of an element can be selected or not" },
    { name: "verticalAlign", description: "The vertical alignment of the content in an element" },
    { name: "visibility", description: "Whether an element should be visible" },
    { name: "whiteSpace", description: "How to handle tabs, line breaks and whitespace in a text" },
    { name: "width", description: "The width of an element" },
    { name: "wordBreak", description: "Line breaking rules for non-CJK scripts" },
    { name: "wordSpacing", description: "The spacing between words in a text" },
    { name: "wordWrap", description: "Allows long, unbreakable words to be broken and wrap to the next line" },
    { name: "widows", description: "The minimum number of lines for an element that must be visible at the top of a page" },
    { name: "zIndex", description: "The stack order of a positioned element" },]

export default styles
